@{
    ViewBag.Title = "Cardetalies";
}

@model eUseControl.BusinessLogic.DBModel.Car

@Html.Partial("_Header")

<section class="car-details">
    <div class="container">
        <div class="car-details-content">
            @if (Model != null)
            {
                <div class="car-images">
                    <div class="main-image">
                        <img src="@(string.IsNullOrEmpty(Model.MainImageUrl) ? "/Content/images/car-placeholder.jpg" : Model.MainImageUrl)" alt="@Model.Brand @Model.Model" id="main-car-image">
                    </div>
                </div>

                <div class="car-basic-info">
                    <h2>@Model.Brand</h2>
                    <h3>@Model.Model</h3>

                    <div class="price-tag">
                        <span class="price">$@Model.PricePerDay</span>
                        <span class="period">/zi</span>
                    </div>

                    <div class="car-specs">
                        <div class="spec-item"><i class="fa-solid fa-calendar"></i> <span>An: @Model.Year</span></div>
                        <div class="spec-item"><i class="fa-solid fa-gears"></i> <span>Cutie: @Model.Transmission</span></div>
                        <div class="spec-item"><i class="fa-solid fa-gas-pump"></i> <span>Combustibil: @Model.FuelType</span></div>
                        <div class="spec-item"><i class="fa-solid fa-gauge-high"></i> <span>Putere: @Model.Horsepower CP</span></div>
                        <div class="spec-item"><i class="fa-solid fa-user-group"></i> <span>Locuri: @Model.Seats</span></div>
                        <div class="spec-item"><i class="fa-solid fa-car"></i> <span>Categorie: @Model.Category</span></div>
                    </div>

                    <div class="car-stock">
                        <span class="stock-label">În stoc:</span>
                        <span class="stock-value @(Model.Stock > 0 ? "in-stock" : "out-of-stock")">
                            @if (Model.Stock > 0)
                            {
                                <text><i class="fa-solid fa-check"></i> @Model.Stock disponibile</text>
                            }
                            else
                            {
                                <text><i class="fa-solid fa-xmark"></i> Indisponibil</text>
                            }
                        </span>
                    </div>

                    <div class="car-description">
                        <h4>Descriere:</h4>
                        <p>@(string.IsNullOrEmpty(Model.Description) ? "Nicio descriere disponibilă." : Model.Description)</p>
                    </div>

                    <div class="car-more-specs">
                        <h4>Detalii suplimentare:</h4>
                        <ul>
                            <li><strong>Motor:</strong> @(string.IsNullOrEmpty(Model.Engine) ? "N/A" : Model.Engine)</li>
                            <li><strong>Cuplu:</strong> @(string.IsNullOrEmpty(Model.Torque) ? "N/A" : Model.Torque)</li>
                            <li><strong>Accelerație (0-100 km/h):</strong> @(string.IsNullOrEmpty(Model.Acceleration) ? "N/A" : Model.Acceleration)</li>
                            <li><strong>Viteză maximă:</strong> @(string.IsNullOrEmpty(Model.TopSpeed) ? "N/A" : Model.TopSpeed)</li>
                            <li><strong>Consum combustibil:</strong> @(string.IsNullOrEmpty(Model.FuelConsumption) ? "N/A" : Model.FuelConsumption)</li>
                        </ul>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-warning">Detalii mașină nu au putut fi încărcate.</div>
            }

            <div class="car-details-booking-section">
                <h4>Alegeți datele de închiriere</h4>
                <div class="car-details-booking-form-content">
                    @if (Model != null)
                    {
                        using (Html.BeginForm("AddToCart", "Home", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("CarId", Model.CarId)

                            <div class="form-group">
                                <label for="pickupDate">Data preluării:</label>
                                <input type="date" id="pickupDate" name="pickupDate" class="form-control" required>
                            </div>

                            <div class="form-group">
                                <label for="returnDate">Data returnării:</label>
                                <input type="date" id="returnDate" name="returnDate" class="form-control" required>
                            </div>

                            <div class="form-group">
                                <label for="totalAmount">Preț Total:</label>
                                <input type="text" id="totalAmount" name="totalAmount" class="form-control" readonly value="0">
                            </div>

                            <button type="submit" class="btn btn-primary">Adaugă în Coș</button>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const pickupDateInput = document.getElementById('pickupDate');
        const returnDateInput = document.getElementById('returnDate');
        const totalAmountInput = document.getElementById('totalAmount');
        const pricePerDay = @(Model != null ? Model.PricePerDay : 0);

        function calculateTotal() {
            const pickupDate = new Date(pickupDateInput.value);
            const returnDate = new Date(returnDateInput.value);

            if (pickupDateInput.value && returnDateInput.value && returnDate >= pickupDate) {
                const timeDiff = returnDate - pickupDate;
                const daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24)) + 1;
                const total = daysDiff * pricePerDay;
                totalAmountInput.value = total.toFixed(2);
            } else {
                totalAmountInput.value = '0';
            }
        }

        pickupDateInput.addEventListener('change', calculateTotal);
        returnDateInput.addEventListener('change', calculateTotal);

        const today = new Date().toISOString().split('T')[0];
        pickupDateInput.min = today;
        returnDateInput.min = today;

        calculateTotal();
    });

    function changeImage(src) {
        document.getElementById('main-car-image').src = src;
    }
</script>

@Html.Partial("_Footer")