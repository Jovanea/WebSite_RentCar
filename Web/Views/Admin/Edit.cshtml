@model eUseControl.BusinessLogic.DBModel.Car

@{
    ViewBag.Title = "Edit Car";
}

<div class="admin-container">
    <h2>Edit Car</h2>

    @using (Html.BeginForm("Edit", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.CarId)

        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Brand)
                            @Html.TextBoxFor(m => m.Brand, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Brand, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Model)
                            @Html.TextBoxFor(m => m.Model, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Model, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Year)
                            @Html.TextBoxFor(m => m.Year, new { @class = "form-control", type = "number" })
                            @Html.ValidationMessageFor(m => m.Year, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.PricePerDay)
                            @Html.TextBoxFor(m => m.PricePerDay, new { @class = "form-control", type = "number", step = "0.01" })
                            @Html.ValidationMessageFor(m => m.PricePerDay, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Category)
                            @Html.TextBoxFor(m => m.Category, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Category, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Transmission)
                            @Html.TextBoxFor(m => m.Transmission, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Transmission, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.FuelType)
                            @Html.TextBoxFor(m => m.FuelType, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.FuelType, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Horsepower)
                            @Html.TextBoxFor(m => m.Horsepower, new { @class = "form-control", type = "number" })
                            @Html.ValidationMessageFor(m => m.Horsepower, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Seats)
                            @Html.TextBoxFor(m => m.Seats, new { @class = "form-control", type = "number" })
                            @Html.ValidationMessageFor(m => m.Seats, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Stock)
                            @Html.TextBoxFor(m => m.Stock, new { @class = "form-control", type = "number" })
                            @Html.ValidationMessageFor(m => m.Stock, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.IsAvailable)
                            @Html.CheckBoxFor(m => m.IsAvailable, new { @class = "form-check-input" })
                        </div>

                        <div class="form-group">
                            <label>Car Image</label>
                            @if (!string.IsNullOrEmpty(Model.MainImageUrl))
                            {
                                <div class="current-image">
                                    <img src="@Model.MainImageUrl" alt="Current car image" style="max-width: 200px;" />
                                </div>
                            }
                            <input type="file" name="carImage" class="form-control-file" accept="image/*" />
                        </div>
                    </div>
                </div>

                <div class="form-group mt-4">
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                    @Html.ActionLink("Back to List", "Cars", null, new { @class = "btn btn-secondary" })
                </div>
            </div>
        </div>
    }
</div>

<style>
    .admin-container {
        padding: 20px;
    }

    .card {
        margin-top: 20px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .current-image {
        margin: 10px 0;
    }

    .text-danger {
        color: #dc3545;
        font-size: 0.875rem;
    }

    .mt-4 {
        margin-top: 1.5rem;
    }
</style>

